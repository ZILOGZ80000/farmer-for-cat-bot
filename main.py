from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

import time
import random
import requests

#### –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ####
counts = 0

# —Ü–≤–µ—Ç–∞
green = "\033[32m"
blue = "\033[34m"
red = "\033[31m"
magneta = "\033[35m"
cyan = "\033[36m"
reset = "\033[0m"
#### –û–°–Ω–æ–≤–Ω–æ–π –∫–æ–¥ ####
–∞ = requests.get("https://cybercatbot.com/")
print(–∞.status_code)
#exit() # –≤—Ä–µ–º–µ–Ω–Ω–æ
options = Options()
options.add_argument('--no-sandbox')
options.add_argument('--headless')
options.add_argument('--disable-dev-shm-usage')

driver = webdriver.Chrome(options=options) 
driver.set_page_load_timeout(30)
driver.implicitly_wait(10)
def likes():
    global counts
    
    # —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    likes = int(input("–ª–∞–π–∫–æ–≤ –Ω—É–∂–Ω–æ –Ω–∞–∫—Ä—É—Ç–∏—Ç—å(–ª—É—á—à–µ –Ω–µ —Ä–æ–≤–Ω–æ–µ –Ω–∞–ø—Ä–∏–º–µ—Ä 395): "))
    url = input("—Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∏—Å–∞(—ç–Ω—Ç–µ—Ä —á—Ç–æ–±—ã –Ω–∞–∫—Ä—É—Ç–∏—Ç—å –Ω–∞ –∫–æ—Ç—é(—Ä–∞–∑—Ä–∞–±–æ—á–∏–∫)): ")

    try:
        if url == "": #
            driver.get("https://cybercatbot.com/cats/67ab782d1b8b88c53be06c67")
            print(" –°–ø–∞—Å–∏–±–æ ü•∞")
        else:
            driver.get("https://cybercatbot.com/cats/67c85a3c1b8b88c53bead266") 
            print(f" –ù–∞–∫—Ä—É—á–∏–≤–∞–µ–º –Ω–∞ id:{url[-24:]}")
    except Exception as e:
        print(f"{red}–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}{reset}")
        driver.quit()
        exit()

    for i in range(likes):
        try:
            # –Ω–∞–∂–∏–º–∞–µ–º –õ–∞–π–∫
            like_btn = driver.find_element(By.XPATH, '//*[text()="–õ–∞–π–∫"]')
            like_btn.click()
            counts += 1
            print(f"{green}+1 –ª–∞–π–∫ | {magneta}–í—Å–µ–≥–æ: {counts} | {cyan}–û—Å—Ç–∞–ª–æ—Å—å: {likes - counts}{reset} | :3")
        
            # –µ—Å–ª–∏ –Ω–∞–∫—Ä—É—Ç–∏–ª–∏ —á–∏—Å–ª–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–µ–µ—Å—è –Ω–∞ 00 (–Ω–∞–ø—Ä–∏–º–µ—Ä 500,1000,100 –∏ —Ç–¥)
            if str(counts)[-2:] == "00":
                print(f"{blue}=== {counts} –ª–∞–π–∫–æ–≤! :3 ==={reset}")
            # –∂–¥–µ–º 1-3 —Å–µ–∫—É–Ω–¥—ã
            time.sleep(random.randint(1, 3))
            # –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ —É–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
            driver.delete_all_cookies()
            driver.execute_script("window.localStorage.clear();")
            driver.refresh()
        
            # –∂–¥–µ–º 3-5 —Å–µ–∫—É–Ω–¥—ã
            time.sleep(random.randint(3, 5))
        
        except Exception as e:
            print(f"{red}–û—à–∏–±–∫–∞ –Ω–∞ –∏—Ç–µ—Ä–∞—Ü–∏–∏ {counts + 1}: {e}{reset}")
            print(f"{cyan}–ü—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...{reset}")
            time.sleep(5)
            try:
                driver.refresh()
                time.sleep(3)
            except:
                print(f"{red}–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É{reset}")
                break


        # –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        driver.quit()
    print(f"{green}–ì–æ—Ç–æ–≤–æ! –ù–∞–∫—Ä—É—á–µ–Ω–æ {counts} –ª–∞–π–∫–æ–≤! :3{reset}")
# –ø–æ–ª—É—á–∏–ª–æ—Å—å: –Ω–∞–∫—Ä—É—á–∏–≤–∞–µ–º –ª–∞–π–∫–∏ –Ω–∞ –∫–∏—Å–∫–∞ 
#:3

def moeny():
    global counts
    moeny = int(input(cyan + "–°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –Ω–∞–∫—Ä—É—Ç–∏—Ç—å –º–æ–Ω–µ—Ç–æ–∫: " + reset))
    url = input(cyan + "—Å—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—Ä–∞–±–æ—Ç–æ—Ç—å –º–æ–Ω–µ—Ç–∫–∏(cybercatbot.com/topup?data=...): " + reset)
    if requests.get(url).status_code == 200:
        print(f"{magneta}=== –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞–∫—Ä—É—Ç–∫—É –º–æ–Ω–µ—Ç ==={reset}")
        print(f"id: {url[-24:]}")
        driver.get(url)
    else:
        print(f"{red}–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏{reset}")
        return
    for i in range(moeny):
        try:
            # –Ω–∞–∂–∏–º–∞–µ–º –ù–∞—á–∞—Ç—å
            start_btn = driver.find_element(By.XPATH,'//*[text()="–ù–∞—á–∞—Ç—å"]')
            start_btn.click()
            # –ø–æ–ª—É—á–∞–µ–º—Ç–µ–∫—Å—Ç –µ–ª–µ–º–µ–Ω—Ç–∞ —Å –∫—Å—Å —Å–µ–ª–µ–∫—Ç—Ä–æ–º .code
            code = driver.find_element(By.CSS_SELECTOR,'.sc-hKgKIp.coIFTS').text
            print(code)

            # —Ä–∞–∑–±–∏–≤–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ —Å–ø–∏—Å–æ–∫ ("–ª–æ–ª" ->["–ª","–æ","–ª"])
            code = list(code)
            for i in code:
                print(i)
                cod = driver.find_element(By.XPATH,f"//*[text()='{i}']")
                cod.click()
            time.sleep(5)
            #driver.find_element(By.XPATH,"//*[text()='–ü–æ–ª—É—á–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É']").click
            finnal = WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, "//*[text()='–ü–æ–ª—É—á–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É']")))
            time.sleep(3)
            driver.refresh()
            counts += 1
            print(f"{green}+1 –º–æ–Ω–µ—Ç–∫–∞ | {magneta}–í—Å–µ–≥–æ: {counts} | {cyan}O—Å—Ç–∞–ª–æ—Å—å: {moeny - counts}{reset} | :3")
            if str(counts)[-2:] == "00":
                print(f"{blue}=== {counts} –º–æ–Ω–µ—Ç–æ–∫! :3 ==={reset}")
            driver.refresh()
            time.sleep(random.randint(3, 5))
        except Exception as e:
            print(f"{red}–û—à–∏–±–∫–∞ –Ω–∞ –∏—Ç–µ—Ä–∞—Ü–∏–∏ {counts + 1}: {e}{reset}")
            print(f"{cyan}–ü—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...{reset}")
            time.sleep(5)
            try:
                driver.refresh()
                time.sleep(3)
            except:
                print(f"{red}–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É{reset}")
                break


if __name__ == "__main__":
    # –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è(–Ω–µ —Ö—Ä–∞–Ω–∏—Ç –ø–∞—Ä–æ–ª—å)
    password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
    # —Ö–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å
    import hashlib
    password = hashlib.sha256(password.encode()).hexdigest()
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å(–Ω–µ –∑–∞—Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π 47755)
    if password == password: #–≤—Ä–µ–º–µ–Ω–Ω–æ
        print(f"{green}–ü–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã–π!{reset}")
    else:
        print(f"{red}–ü–∞—Ä–æ–ª—å –Ω–µ–≤–µ—Ä–Ω—ã–π!{reset}")
        exit()
    #print("—Ç–∏–ø–∞ –∞—Ä—Ç") # –≤—Ä–µ–º–µ–Ω–Ω–æ
    print(magneta + r"""
  ____    _  _____   ____   ___   ___  ____ _____
 / ___|  / \|_   _| | __ ) / _ \ / _ \/ ___|_   _|
| |     / _ \ | |   |  _ \| | | | | | \___ \ | |
| |___ / ___ \| |   | |_) | |_| | |_| |___) || |
 \____/_/   \_\_|   |____/ \___/ \___/|____/ |_|


¬†¬†¬†¬†¬†¬†¬†¬†¬† /\_/\
¬†¬†¬†¬† ____/ o o \
¬†¬† /~____¬† =√∏= /
¬† (______)__m_m)
""" + reset)

    print(cyan + "by ZILOG Z80 (@humans_i_am_not_human)" * 3 + reset)
    print(magneta + "=== –ú–µ–Ω—é ===" + reset)
    print(cyan + "1. –ù–∞–∫—Ä—É—Ç–∏—Ç—å –ª–∞–π–∫–∏\n2. –ù–∞–∫—Ä—É—Ç–∏—Ç—å –º–æ–Ω–µ—Ç–∫–∏" + reset)
    choice = int(input(magneta + "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: " + reset))
    if choice == 1:
        likes()
    elif choice == 2:
        moeny()
    else:
        print(red + "–Ω–µ –ø–æ–Ω—è–ª" + reset)
    

    